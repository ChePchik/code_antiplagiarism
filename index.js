const fs = require("fs");
const esprima = require("esprima");

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è —Ç–æ–∫–µ–Ω–æ–≤ –∏–∑ –∫–æ–¥–∞
function getTokens(code) {
	const tokens = esprima.tokenize(code, { range: true });
	return tokens.map((token) => token.type);
}

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è —Å–æ–∑–¥–∞–Ω–∏—è N-–≥—Ä–∞–º–º
function createNGrams(tokens, n) {
	let ngrams = [];
	for (let i = 0; i < tokens.length - n + 1; i++) {
		ngrams.push(tokens.slice(i, i + n).join(" "));
	}
	return ngrams;
}

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è —Å—Ä–∞–≤–Ω–µ–Ω–∏—è N-–≥—Ä–∞–º–º
function compareNGrams(ngrams1, ngrams2) {
	let matches = 0;
	let ngramsSet2 = new Set(ngrams2);
	for (let ngram of ngrams1) {
		if (ngramsSet2.has(ngram)) {
			matches++;
		}
	}
	let total = Math.max(ngrams1.length, ngrams2.length);
	return (matches / total) * 100; // –ø—Ä–æ—Ü–µ–Ω—Ç —Å–æ–≤–ø–∞–¥–µ–Ω–∏—è
}

// –ß—Ç–µ–Ω–∏–µ –¥–≤—É—Ö —Ñ–∞–π–ª–æ–≤ –∫–æ–¥–∞
const code1 = fs.readFileSync("code1.js", "utf8");
const code2 = fs.readFileSync("code2.js", "utf8");

const tokens1 = getTokens(code1);
const tokens2 = getTokens(code2);

const ngrams1 = createNGrams(tokens1, 3); // 3-–≥—Ä–∞–º–º—ã
console.log("üöÄ ~ ngrams1:", ngrams1);
const ngrams2 = createNGrams(tokens2, 3);

const similarity = compareNGrams(ngrams1, ngrams2);

console.log(`–°—Ö–æ–¥—Å—Ç–≤–æ –∫–æ–¥–∞: ${similarity.toFixed(2)}%`);

if (similarity > 70) {
	// –ü–æ—Ä–æ–≥–æ–≤–æ–µ –∑–Ω–∞—á–µ–Ω–∏–µ —Å—Ö–æ–¥—Å—Ç–≤–∞
	console.log("–í—ã—Å–æ–∫–∞—è –≤–µ—Ä–æ—è—Ç–Ω–æ—Å—Ç—å –ø–ª–∞–≥–∏–∞—Ç–∞.");
} else {
	console.log("–ö–æ–¥—ã –æ—Ç–ª–∏—á–∞—é—Ç—Å—è.");
}
